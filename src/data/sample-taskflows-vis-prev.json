{
    "taskFlows": 
    {
        "taskFlow_1": {
            "taskFlowId": "1",
            "taskFlowName": "Line and Bar Chart Visualization",
            "taskFlowDescription": "This flow creates a line chart and a bar chart to visualize trends and comparisons in the dataset.",
            "taskFlowStart": {
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "Dataset with time series and categorical data",
                    "file": "data.csv"
                }
            },
            "taskFlowSteps": [
                {
                    "stepId": "step-1",
                    "stepName": "Load Data",
                    "stepLabel": "Loading",
                    "stepDescription": "Load the dataset from a CSV file into a DataFrame.",
                    "nextSteps": [
                        "step-2",
                        "step-3"
                    ]
                },
                {
                    "stepId": "step-2",
                    "stepName": "Create Line Chart",
                    "stepLabel": "Line Chart",
                    "stepDescription": "Generate a line chart to show trends over time.",
                    "nextSteps": [
                        "step-4"
                    ]
                },
                {
                    "stepId": "step-3",
                    "stepName": "Create Bar Chart",
                    "stepLabel": "Bar Chart",
                    "stepDescription": "Generate a bar chart to compare categorical data.",
                    "nextSteps": [
                        "step-4"
                    ]
                },
                {
                    "stepId": "step-4",
                    "stepName": "Display Charts",
                    "stepLabel": "Display",
                    "stepDescription": "Display both charts side by side for comprehensive analysis.",
                    "nextSteps": []
                }
            ]
        },
        "taskFlow_2": {
            "taskFlowId": "2",
            "taskFlowName": "Scatter Plot and Histogram",
            "taskFlowDescription": "This flow visualizes data distribution and relationships using a scatter plot and a histogram.",
            "taskFlowStart": {
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "Dataset with numerical data",
                    "file": "data.csv"
                }
            },
            "taskFlowSteps": [
                {
                    "stepId": "step-1",
                    "stepName": "Generate Scatter Plot",
                    "stepLabel": "Scatter Plot",
                    "stepDescription": "Create a scatter plot to visualize relationships between two numerical variables.",
                    "nextSteps": [
                        "step-2"
                    ]
                },
                {
                    "stepId": "step-2",
                    "stepName": "Generate Histogram",
                    "stepLabel": "Histogram",
                    "stepDescription": "Create a histogram to show the distribution of a single numerical variable.",
                    "nextSteps": []
                }
            ]
        },
        "taskFlow_3": {
            "taskFlowId": "3",
            "taskFlowName": "Heat Map and Interactive Visualization",
            "taskFlowDescription": "This flow creates a heat map and an interactive plot for enhanced data exploration.",
            "taskFlowStart": {
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "Dataset with correlation data",
                    "file": "data.csv"
                }
            },
            "taskFlowSteps": [
                {
                    "stepId": "step-1",
                    "stepName": "Generate Heat Map",
                    "stepLabel": "Heat Map",
                    "stepDescription": "Create a heat map to visualize the correlation matrix of the dataset.",
                    "nextSteps": [
                        "step-2"
                    ]
                },
                {
                    "stepId": "step-2",
                    "stepName": "Setup Interactive Plot",
                    "stepLabel": "Interactive Plot",
                    "stepDescription": "Use an interactive library to create a dynamic visualization for detailed exploration.",
                    "nextSteps": [
                        "step-3"
                    ]
                },
                {
                    "stepId": "step-3",
                    "stepName": "Display Interactive Visualization",
                    "stepLabel": "Display Interactive",
                    "stepDescription": "Render the interactive plot for user engagement and deeper insight.",
                    "nextSteps": []
                }
            ]
        }
    },
    "flowsWithPatterns": 
    [
        {
            "taskFlowId": "3-1",
            "taskFlowName": "Scatter Plot and Histogram",
            "taskFlowDescription": "This flow visualizes data distribution and relationships using a scatter plot and a histogram.",
            "patternsId": 3,
            "taskFlowStart": {
                "stepId": "step-0",
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "Dataset with numerical data",
                    "file": "data.csv"
                }
            },
            "taskFlowSteps": [
                {
                    "stepId": "step-1",
                    "stepName": "Generate Scatter Plot",
                    "stepLabel": "Scatter Plot",
                    "stepDescription": "Create a scatter plot to visualize relationships between two numerical variables.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "Creating a scatter plot is a straightforward task that can be efficiently handled by a single agent focusing on the plotting mechanics without additional complexity."
                    },
                    "nextSteps": [
                        "step-2"
                    ],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    }
                },
                {
                    "stepId": "step-2",
                    "stepName": "Generate Histogram",
                    "stepLabel": "Histogram",
                    "stepDescription": "Create a histogram to show the distribution of a single numerical variable.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "Creating a histogram to illustrate the distribution of a single numerical variable is a straightforward task, well-suited to a single agent that can efficiently execute this clear and defined process."
                    },
                    "nextSteps": [],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    }
                }
            ],
            "patternId": "3-1"
        },
        {
            "taskFlowId": "3-2",
            "taskFlowName": "Scatter Plot and Histogram",
            "taskFlowDescription": "This flow visualizes data distribution and relationships using a scatter plot and a histogram.",
            "patternsId": 4,
            "taskFlowStart": {
                "stepId": "step-0",
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "Dataset with numerical data",
                    "file": "data.csv"
                }
            },
            "taskFlowSteps": [
                {
                    "stepId": "step-1",
                    "stepName": "Generate Scatter Plot",
                    "stepLabel": "Scatter Plot",
                    "stepDescription": "Create a scatter plot to visualize relationships between two numerical variables.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "Creating a scatter plot is a straightforward task that can be efficiently handled by a single agent focusing on the plotting mechanics without additional complexity."
                    },
                    "nextSteps": [
                        "step-2"
                    ],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    }
                },
                {
                    "stepId": "step-2",
                    "stepName": "Generate Histogram",
                    "stepLabel": "Histogram",
                    "stepDescription": "Create a histogram to show the distribution of a single numerical variable.",
                    "pattern": {
                        "name": "Reflection",
                        "recommendationReason": "While generating the histogram is straightforward, applying the reflection pattern ensures the accuracy and clarity of the visualization through feedback, refining the output iteratively."
                    },
                    "nextSteps": [],
                    "template": {
                        "confirm": false,
                        "maxRound": 3,
                        "evaluator": {
                            "persona": "A meticulous data analyst focused on accuracy and clarity.",
                            "goal": "To assess the histogram for accurate representation of data distribution, ensuring scales and bin widths are appropriately set for clear insights.",
                            "patternPrompt": "You are a helpful evaluator who can analyze the output of optimizer agent. You work with optimizer agent to solve the task and iterate on the output. You should always include the final output from the optimizer agent in your response. Then, If the output is not good enough, you should add with feedbacks and suggestions for improvement with the output from the optimizer agent, and ask the agent to improve the output. If the output is good enough, you should respond the final output from the optimizer agent, and add APPROVED at the end of your response. "
                        },
                        "optimizer": {
                            "persona": "A creative visual designer ensuring the aesthetic and functional quality of visualizations.",
                            "goal": "To refine the histogram's design iteratively, enhancing both visual appeal and interpretability based on evaluator feedback.",
                            "patternPrompt": "You are a helpful optimizer who can work with evaluator agent. You can efficiently improve the output based on the feedbacks and suggestions provided by the evaluator. You work with the evaluator and iterate on the output until it is good enough. You should not ask extra questions, just produce and optimize the output."
                        }
                    }
                }
            ],
            "patternId": "3-2"
        },
        {
            "taskFlowId": "2-1",
            "taskFlowName": "Line and Bar Chart Visualization",
            "taskFlowDescription": "This flow creates a line chart and a bar chart to visualize trends and comparisons in the dataset.",
            "patternsId": 2,
            "taskFlowStart": {
                "stepId": "step-0",
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "Dataset with time series and categorical data",
                    "file": "data.csv"
                }
            },
            "taskFlowSteps": [
                {
                    "stepName": "Load Data",
                    "stepLabel": "Loading",
                    "stepDescription": "Load the dataset from a CSV file into a DataFrame.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "The Single Agent pattern efficiently handles loading data from a file into a DataFrame as it's a straightforward task without requiring additional complexities."
                    },
                    "config": {
                        "type": "none",
                        "nodes": [],
                        "edges": []
                    },
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    },
                    "nextSteps": [
                        "step-2",
                        "step-3"
                    ],
                    "stepId": "step-1"
                },
                {
                    "stepName": "Create Line Chart",
                    "stepLabel": "Line Chart",
                    "stepDescription": "Generate a line chart to show trends over time.",
                    "pattern": {
                        "name": "Redundant",
                        "recommendationReason": "Executing parallel processes can address specific aspects of visualization such as data accuracy verification and style adjustments, enhancing the final output."
                    },
                    "config": {
                        "type": "none",
                        "nodes": [],
                        "edges": []
                    },
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "withAggregation": true,
                        "agents": [
                            {
                                "persona": "Agent A: Specializes in creating line and bar charts. Analytical and detail-oriented, focused on trend analysis and comparison.",
                                "goal": "Generate executable Python code for line charts and bar charts, focusing on trend analysis and comparison based on the given partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Agent B: Expert in scatter plots and histograms. Creative and insightful, aimed at uncovering relationships and distributions.",
                                "goal": "Produce Python code for scatter plots and histograms to explore relationships and data distributions within the partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            }
                        ],
                        "aggregation": {
                            "persona": "Aggregation Agent: Synthesizes and optimizes visualization outputs into cohesive Python scripts. Systematic and integrative, ensures uniform style and adds interactivity.",
                            "goal": "Combine the diverse Python visualization codes created by Agents A, B, and C into a single, executable script that maintains consistency in style and enhances user interactivity and engagement.",
                            "patternPrompt": "Helpful assistant who can aggregate the output of the previous agents conversation."
                        },
                        "agentNum": 0
                    },
                    "nextSteps": [
                        "step-4"
                    ],
                    "stepId": "step-2"
                },
                {
                    "stepName": "Create Bar Chart",
                    "stepLabel": "Bar Chart",
                    "stepDescription": "Generate a bar chart to compare categorical data.",
                    "pattern": {
                        "name": "Redundant",
                        "recommendationReason": "Using multiple agents to concurrently process different data aspects in parallel ensures robustness and quick results when creating a bar chart."
                    },
                    "config": {
                        "type": "none",
                        "nodes": [],
                        "edges": []
                    },
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "withAggregation": true,
                        "agents": [
                            {
                                "persona": "Agent B: Expert in scatter plots and histograms. Creative and insightful, aimed at uncovering relationships and distributions.",
                                "goal": "Produce Python code for scatter plots and histograms to explore relationships and data distributions within the partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Quality Checker - Reviews the final bar chart to ensure it meets the desired standards in terms of data representation, accuracy, and visual appeal.",
                                "goal": "Conduct a final quality check to confirm that the bar chart is accurate, concise, and effectively conveys the comparison of categorical data."
                            }
                        ],
                        "aggregation": {
                            "persona": "Aggregation Agent: Synthesizes and optimizes visualization outputs into cohesive Python scripts. Systematic and integrative, ensures uniform style and adds interactivity.",
                            "goal": "Combine the diverse Python visualization codes created by Agents A, B, and C into a single, executable script that maintains consistency in style and enhances user interactivity and engagement.",
                            "patternPrompt": "Helpful assistant who can aggregate the output of the previous agents conversation."
                        },
                        "agentNum": 0
                    },
                    "nextSteps": [
                        "step-4"
                    ],
                    "stepId": "step-3"
                },
                {
                    "stepName": "Display Charts",
                    "stepLabel": "Display",
                    "stepDescription": "Display both charts side by side for comprehensive analysis.",
                    "pattern": {
                        "name": "Redundant",
                        "recommendationReason": "The redundant pattern allows for the simultaneous creation and display of both a line chart and a bar chart, enabling parallel processing for efficient visualization."
                    },
                    "config": {
                        "type": "none",
                        "nodes": [],
                        "edges": []
                    },
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "withAggregation": true,
                        "agents": [
                            {
                                "persona": "Agent B: Expert in scatter plots and histograms. Creative and insightful, aimed at uncovering relationships and distributions.",
                                "goal": "Produce Python code for scatter plots and histograms to explore relationships and data distributions within the partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Quality Checker - Reviews the final bar chart to ensure it meets the desired standards in terms of data representation, accuracy, and visual appeal.",
                                "goal": "Conduct a final quality check to confirm that the bar chart is accurate, concise, and effectively conveys the comparison of categorical data."
                            }
                        ],
                        "aggregation": {
                            "persona": "Aggregation Agent: Synthesizes and optimizes visualization outputs into cohesive Python scripts. Systematic and integrative, ensures uniform style and adds interactivity.",
                            "goal": "Combine the diverse Python visualization codes created by Agents A, B, and C into a single, executable script that maintains consistency in style and enhances user interactivity and engagement.",
                            "patternPrompt": "Helpful assistant who can aggregate the output of the previous agents conversation."
                        },
                        "agentNum": 0
                    },
                    "nextSteps": [],
                    "stepId": "step-4"
                }
            ],
            "patternId": "2-1"
        },
        {
            "taskFlowId": "2-2",
            "taskFlowName": "Line and Bar Chart Visualization",
            "taskFlowDescription": "This flow creates a line chart and a bar chart to visualize trends and comparisons in the dataset.",
            "patternsId": 3,
            "taskFlowStart": {
                "stepId": "step-0",
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "Dataset with time series and categorical data",
                    "file": "data.csv"
                }
            },
            "taskFlowSteps": [
                {
                    "stepName": "Load Data",
                    "stepLabel": "Loading",
                    "stepDescription": "Load the dataset from a CSV file into a DataFrame.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "The Single Agent pattern efficiently handles loading data from a file into a DataFrame as it's a straightforward task without requiring additional complexities."
                    },
                    "config": {
                        "type": "none",
                        "nodes": [],
                        "edges": []
                    },
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    },
                    "nextSteps": [
                        "step-2",
                        "step-3"
                    ],
                    "stepId": "step-1"
                },
                {
                    "stepName": "Create Line Chart",
                    "stepLabel": "Line Chart",
                    "stepDescription": "Generate a line chart to show trends over time.",
                    "pattern": {
                        "name": "Redundant",
                        "recommendationReason": "Executing parallel processes can address specific aspects of visualization such as data accuracy verification and style adjustments, enhancing the final output."
                    },
                    "config": {
                        "type": "none",
                        "nodes": [],
                        "edges": []
                    },
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "withAggregation": true,
                        "agents": [
                            {
                                "persona": "Agent A: Specializes in creating line and bar charts. Analytical and detail-oriented, focused on trend analysis and comparison.",
                                "goal": "Generate executable Python code for line charts and bar charts, focusing on trend analysis and comparison based on the given partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Agent B: Expert in scatter plots and histograms. Creative and insightful, aimed at uncovering relationships and distributions.",
                                "goal": "Produce Python code for scatter plots and histograms to explore relationships and data distributions within the partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Agent C: Adept at crafting heat maps and other advanced visualizations. Innovative and precise, targeting density and categorical data insights.",
                                "goal": "Develop Python scripts for heat maps and any other relevant advanced visualizations to highlight density and categorical insights from the partial dataset."
                            },
                            {
                                "persona": "Quality Checker - Reviews the final bar chart to ensure it meets the desired standards in terms of data representation, accuracy, and visual appeal.",
                                "goal": "Conduct a final quality check to confirm that the bar chart is accurate, concise, and effectively conveys the comparison of categorical data."
                            }
                        ],
                        "aggregation": {
                            "persona": "Aggregation Agent: Synthesizes and optimizes visualization outputs into cohesive Python scripts. Systematic and integrative, ensures uniform style and adds interactivity.",
                            "goal": "Combine the diverse Python visualization codes created by Agents A, B, and C into a single, executable script that maintains consistency in style and enhances user interactivity and engagement.",
                            "patternPrompt": "Helpful assistant who can aggregate the output of the previous agents conversation."
                        }
                    },
                    "nextSteps": [
                        "step-4"
                    ],
                    "stepId": "step-2"
                },
                {
                    "stepName": "Create Bar Chart",
                    "stepLabel": "Bar Chart",
                    "stepDescription": "Generate a bar chart to compare categorical data.",
                    "pattern": {
                        "name": "Redundant",
                        "recommendationReason": "Using multiple agents to concurrently process different data aspects in parallel ensures robustness and quick results when creating a bar chart."
                    },
                    "config": {
                        "type": "none",
                        "nodes": [],
                        "edges": []
                    },
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "withAggregation": true,
                        "agents": [
                            {
                                "persona": "Agent A: Specializes in creating line and bar charts. Analytical and detail-oriented, focused on trend analysis and comparison.",
                                "goal": "Generate executable Python code for line charts and bar charts, focusing on trend analysis and comparison based on the given partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Agent B: Expert in scatter plots and histograms. Creative and insightful, aimed at uncovering relationships and distributions.",
                                "goal": "Produce Python code for scatter plots and histograms to explore relationships and data distributions within the partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Agent C: Adept at crafting heat maps and other advanced visualizations. Innovative and precise, targeting density and categorical data insights.",
                                "goal": "Develop Python scripts for heat maps and any other relevant advanced visualizations to highlight density and categorical insights from the partial dataset."
                            },
                            {
                                "persona": "Quality Checker - Reviews the final bar chart to ensure it meets the desired standards in terms of data representation, accuracy, and visual appeal.",
                                "goal": "Conduct a final quality check to confirm that the bar chart is accurate, concise, and effectively conveys the comparison of categorical data."
                            }
                        ],
                        "aggregation": {
                            "persona": "Aggregation Agent: Synthesizes and optimizes visualization outputs into cohesive Python scripts. Systematic and integrative, ensures uniform style and adds interactivity.",
                            "goal": "Combine the diverse Python visualization codes created by Agents A, B, and C into a single, executable script that maintains consistency in style and enhances user interactivity and engagement.",
                            "patternPrompt": "Helpful assistant who can aggregate the output of the previous agents conversation."
                        }
                    },
                    "nextSteps": [
                        "step-4"
                    ],
                    "stepId": "step-3"
                },
                {
                    "stepName": "Display Charts",
                    "stepLabel": "Display",
                    "stepDescription": "Display both charts side by side for comprehensive analysis.",
                    "pattern": {
                        "name": "Supervision",
                        "recommendationReason": "The supervision pattern coordinates the display tasks by managing diverse visualization requirements, ensuring that the presentation of charts meets comprehensive analysis standards."
                    },
                    "config": {
                        "type": "none",
                        "nodes": [],
                        "edges": []
                    },
                    "template": {
                        "confirm": false,
                        "maxRound": 3,
                        "workers": [
                            {
                                "persona": "A meticulous chart engineer focused on crafting user-friendly and informative interactive charts.",
                                "goal": "To develop and implement interactive chart components that allow users to drill down into specific data points for in-depth exploration.",
                                "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "A visualization specialist dedicated to enhancing the aesthetic and functional aspects of the plot.",
                                "goal": "To enhance the plot's visual appeal, ensuring it is both engaging and intuitive, while maintaining data accuracy and clarity.",
                                "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                            }
                        ],
                        "supervisor": {
                            "persona": "A strategic supervisor ensuring all visualization components are aligned and functional for creating an interactive data exploration experience.",
                            "goal": "To coordinate worker efforts and ensure all interactive and aesthetic elements are integrated seamlessly into a cohesive user experience.",
                            "patternPrompt": "You are a helpful supervisor who can coordinate the workers to complete the task. Given the user request and conversation history, respond with the WORKER agent to act next for this task. Each agent will perform a subtask and respond with their restuls and status. When the task is done, you should select next steps agent."
                        },
                        "persona": "The guiding force overseeing visualization tasks, ensuring the creation of an effective interactive plot.",
                        "goal": "To supervise and manage the creation of a dynamic, cohesive interactive plot for detailed data exploration by coordinating visualization workers."
                    },
                    "nextSteps": [],
                    "stepId": "step-4"
                }
            ],
            "patternId": "2-2"
        },
        {
            "taskFlowId": "4-1",
            "taskFlowName": "Heat Map and Interactive Visualization",
            "taskFlowDescription": "This flow creates a heat map and an interactive plot for enhanced data exploration.",
            "patternsId": 4,
            "taskFlowStart": {
                "stepId": "step-0",
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "Dataset with correlation data",
                    "file": "data.csv"
                }
            },
            "taskFlowSteps": [
                {
                    "stepId": "step-1",
                    "stepName": "Generate Heat Map",
                    "stepLabel": "Heat Map",
                    "stepDescription": "Create a heat map to visualize the correlation matrix of the dataset.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "Creating a heat map based on a correlation matrix is a straightforward task that requires focused computation without the need for collaboration or supervision."
                    },
                    "nextSteps": [
                        "step-2"
                    ],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    }
                },
                {
                    "stepId": "step-2",
                    "stepName": "Setup Interactive Plot",
                    "stepLabel": "Interactive Plot",
                    "stepDescription": "Use an interactive library to create a dynamic visualization for detailed exploration.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "Creating an interactive plot using a specific library is a straightforward task that a single agent can efficiently handle due to its well-defined nature."
                    },
                    "nextSteps": [
                        "step-3"
                    ],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    }
                },
                {
                    "stepId": "step-3",
                    "stepName": "Display Interactive Visualization",
                    "stepLabel": "Display Interactive",
                    "stepDescription": "Render the interactive plot for user engagement and deeper insight.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "The task of rendering an interactive plot is straightforward and well-defined, making it suitable for a Single Agent to handle efficiently without additional complexity."
                    },
                    "nextSteps": [],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    }
                }
            ],
            "patternId": "4-1"
        },
        {
            "taskFlowId": "4-2",
            "taskFlowName": "Heat Map and Interactive Visualization",
            "taskFlowDescription": "This flow creates a heat map and an interactive plot for enhanced data exploration.",
            "patternsId": 5,
            "taskFlowStart": {
                "stepId": "step-0",
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "Dataset with correlation data",
                    "file": "data.csv"
                }
            },
            "taskFlowSteps": [
                {
                    "stepId": "step-1",
                    "stepName": "Generate Heat Map",
                    "stepLabel": "Heat Map",
                    "stepDescription": "Create a heat map to visualize the correlation matrix of the dataset.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "Since generating a visual representation like a heat map is a well-defined and systematic process, a single agent can efficiently handle this task alone."
                    },
                    "nextSteps": [
                        "step-2"
                    ],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    }
                },
                {
                    "stepId": "step-2",
                    "stepName": "Setup Interactive Plot",
                    "stepLabel": "Interactive Plot",
                    "stepDescription": "Use an interactive library to create a dynamic visualization for detailed exploration.",
                    "pattern": {
                        "name": "Supervision",
                        "recommendationReason": "Implementing a dynamic visualization may require different visualization aspects to be coordinated, with a supervisor agent managing various visualization workers to ensure a cohesive outcome."
                    },
                    "nextSteps": [
                        "step-3"
                    ],
                    "template": {
                        "confirm": false,
                        "maxRound": 3,
                        "workers": [
                            {
                                "persona": "A meticulous chart engineer focused on crafting user-friendly and informative interactive charts.",
                                "goal": "To develop and implement interactive chart components that allow users to drill down into specific data points for in-depth exploration.",
                                "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "A visualization specialist dedicated to enhancing the aesthetic and functional aspects of the plot.",
                                "goal": "To enhance the plot's visual appeal, ensuring it is both engaging and intuitive, while maintaining data accuracy and clarity.",
                                "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                            }
                        ],
                        "supervisor": {
                            "persona": "A strategic supervisor ensuring all visualization components are aligned and functional for creating an interactive data exploration experience.",
                            "goal": "To coordinate worker efforts and ensure all interactive and aesthetic elements are integrated seamlessly into a cohesive user experience.",
                            "patternPrompt": "You are a helpful supervisor who can coordinate the workers to complete the task. Given the user request and conversation history, respond with the WORKER agent to act next for this task. Each agent will perform a subtask and respond with their restuls and status. When the task is done, you should select next steps agent."
                        },
                        "persona": "The guiding force overseeing visualization tasks, ensuring the creation of an effective interactive plot.",
                        "goal": "To supervise and manage the creation of a dynamic, cohesive interactive plot for detailed data exploration by coordinating visualization workers."
                    }
                },
                {
                    "stepId": "step-3",
                    "stepName": "Display Interactive Visualization",
                    "stepLabel": "Display Interactive",
                    "stepDescription": "Render the interactive plot for user engagement and deeper insight.",
                    "pattern": {
                        "name": "Single Agent",
                        "recommendationReason": "The task of rendering an interactive plot is straightforward and well-defined, making it suitable for a Single Agent to handle efficiently without additional complexity."
                    },
                    "nextSteps": [],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "persona": "Data Visualization Specialist",
                        "goal": "Utilize a specialized interactive library such as Plotly or Bokeh to create a dynamic plot that allows users to explore the data in greater detail. This includes implementing features such as zoom, pan, hover tooltips, and filtering capabilities to enhance user interaction and insight discovery.",
                        "patternPrompt": "Helpful assistant who can finish the task. You should not ask questions, just execute the task."
                    }
                }
            ],
            "patternId": "4-2"
        }
    ,
    
        {
            "taskFlowId": "1-1",
            "taskFlowName": "Baseline",
            "taskFlowDescription": "This is a baseline flow",
            "patternsId": 1,
            "taskFlowStart": {
                "stepId": "step-0",
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "",
                    "file": ""
                }
            },
            "taskFlowSteps": [
                {
                    "stepId": "step-1",
                    "stepName": "Baseline flow",
                    "stepLabel": "Baseline flow",
                    "stepDescription": "Generate executable, diverse, insightful and interactive visualization Python Codes for the given partial dataset. The expected output should be executable Python codes, utilizing appropriate diverse chart types such as line charts, bar charts, scatter plots, histograms, heat maps, or other relevant graphical representations. The final Python codes should be runnable, informative and engaging.",
                    "pattern": {
                        "name": "Redundant",
                        "recommendationReason": "Using the Redundant pattern allows parallel creation of various visualizations, each focusing on a different aspect or chart type, ensuring comprehensive and diverse graphical representation from the partial dataset."
                    },
                    "nextSteps": [],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "withAggregation": true,
                        "agents": [
                            {
                                "persona": "Agent A: Specializes in creating line and bar charts. Analytical and detail-oriented, focused on trend analysis and comparison.",
                                "goal": "Generate executable Python code for line charts and bar charts, focusing on trend analysis and comparison based on the given partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Agent B: Expert in scatter plots and histograms. Creative and insightful, aimed at uncovering relationships and distributions.",
                                "goal": "Produce Python code for scatter plots and histograms to explore relationships and data distributions within the partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Agent C: Adept at crafting heat maps and other advanced visualizations. Innovative and precise, targeting density and categorical data insights.",
                                "goal": "Develop Python scripts for heat maps and any other relevant advanced visualizations to highlight density and categorical insights from the partial dataset."
                            },
                            {
                                "persona": "Quality Checker - Reviews the final bar chart to ensure it meets the desired standards in terms of data representation, accuracy, and visual appeal.",
                                "goal": "Conduct a final quality check to confirm that the bar chart is accurate, concise, and effectively conveys the comparison of categorical data."
                            }
                        ],
                        "aggregation": {
                            "persona": "Aggregation Agent: Synthesizes and optimizes visualization outputs into cohesive Python scripts. Systematic and integrative, ensures uniform style and adds interactivity.",
                            "goal": "Combine the diverse Python visualization codes created by Agents A, B, and C into a single, executable script that maintains consistency in style and enhances user interactivity and engagement.",
                            "patternPrompt": "Helpful assistant who can aggregate the output of the previous agents conversation."
                        }
                    }
                }
            ],
            "patternId": "1-1"
        },
        {
            "taskFlowId": "1-2",
            "taskFlowName": "Baseline",
            "taskFlowDescription": "This is a baseline flow",
            "patternsId": 2,
            "taskFlowStart": {
                "stepId": "step-0",
                "nextSteps": [
                    "step-1"
                ],
                "input": {
                    "text": "",
                    "file": ""
                }
            },
            "taskFlowSteps": [
                {
                    "stepId": "step-1",
                    "stepName": "Baseline flow",
                    "stepLabel": "Baseline flow",
                    "stepDescription": "Generate executable, diverse, insightful and interactive visualization Python Codes for the given partial dataset. The expected output should be executable Python codes, utilizing appropriate diverse chart types such as line charts, bar charts, scatter plots, histograms, heat maps, or other relevant graphical representations. The final Python codes should be runnable, informative and engaging.",
                    "pattern": {
                        "name": "Redundant",
                        "recommendationReason": "Using the Redundant pattern allows parallel creation of various visualizations, each focusing on a different aspect or chart type, ensuring comprehensive and diverse graphical representation from the partial dataset."
                    },
                    "nextSteps": [],
                    "template": {
                        "confirm": false,
                        "maxRound": 1,
                        "withAggregation": true,
                        "agents": [
                            {
                                "persona": "Agent A: Specializes in creating line and bar charts. Analytical and detail-oriented, focused on trend analysis and comparison.",
                                "goal": "Generate executable Python code for line charts and bar charts, focusing on trend analysis and comparison based on the given partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Agent B: Expert in scatter plots and histograms. Creative and insightful, aimed at uncovering relationships and distributions.",
                                "goal": "Produce Python code for scatter plots and histograms to explore relationships and data distributions within the partial dataset.",
                                "patternPrompt": "Helpful assistant who finish the task. You should not ask questions, just execute the task."
                            },
                            {
                                "persona": "Agent C: Adept at crafting heat maps and other advanced visualizations. Innovative and precise, targeting density and categorical data insights.",
                                "goal": "Develop Python scripts for heat maps and any other relevant advanced visualizations to highlight density and categorical insights from the partial dataset."
                            },
                            {
                                "persona": "Quality Checker - Reviews the final bar chart to ensure it meets the desired standards in terms of data representation, accuracy, and visual appeal.",
                                "goal": "Conduct a final quality check to confirm that the bar chart is accurate, concise, and effectively conveys the comparison of categorical data."
                            }
                        ],
                        "aggregation": {
                            "persona": "Aggregation Agent: Synthesizes and optimizes visualization outputs into cohesive Python scripts. Systematic and integrative, ensures uniform style and adds interactivity.",
                            "goal": "Combine the diverse Python visualization codes created by Agents A, B, and C into a single, executable script that maintains consistency in style and enhances user interactivity and engagement.",
                            "patternPrompt": "Helpful assistant who can aggregate the output of the previous agents conversation."
                        }
                    }
                }
            ],
            "patternId": "1-2"
        }
    ]
}